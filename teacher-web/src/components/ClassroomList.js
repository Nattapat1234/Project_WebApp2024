import React, { useEffect, useState } from "react";
import { db } from "../services/firebase";
import { useNavigate } from "react-router-dom";
import { collection, query, where, onSnapshot } from "firebase/firestore";
import { updateClassroom, deleteClassroom } from "../services/classroomService";

const ClassroomList = ({ uid }) => {
  const [classrooms, setClassrooms] = useState([]);
  const navigate = useNavigate();
  const [editMode, setEditMode] = useState(null);
  const [updatedName, setUpdatedName] = useState("");

  useEffect(() => {
    if (!uid) return;

    // üîÑ ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏≤‡∏¢‡∏ß‡∏¥‡∏ä‡∏≤‡πÅ‡∏ö‡∏ö‡πÄ‡∏£‡∏µ‡∏¢‡∏•‡πÑ‡∏ó‡∏°‡πå
    const classroomsRef = collection(db, "classroom");
    const q = query(classroomsRef, where("owner", "==", uid));

    const unsubscribe = onSnapshot(q, (snapshot) => {
      setClassrooms(snapshot.docs.map((doc) => ({ id: doc.id, ...doc.data() })));
    });

    return () => unsubscribe();
  }, [uid]);

  // üÜï ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
  const handleUpdate = async (cid) => {
    if (!updatedName) return;
    try {
      await updateClassroom(cid, { name: updatedName });
      setEditMode(null);
      setUpdatedName("");
    } catch (error) {
      alert("‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏´‡πâ‡∏≠‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡πÑ‡∏î‡πâ");
    }
  };

  // üóëÔ∏è ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏•‡∏ö‡∏´‡πâ‡∏≠‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô
  const handleDelete = async (cid) => {
    if (window.confirm("‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏ß‡πà‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏´‡πâ‡∏≠‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏ô‡∏µ‡πâ?")) {
      try {
        await deleteClassroom(cid, uid);
        alert("‡∏•‡∏ö‡∏´‡πâ‡∏≠‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à");
      } catch (error) {
        alert("‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏•‡∏ö‡∏´‡πâ‡∏≠‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡πÑ‡∏î‡πâ");
      }
    }
  };

  return (
    <div className="mt-5">
      <h2 className="text-lg font-bold">‡∏£‡∏≤‡∏¢‡∏ß‡∏¥‡∏ä‡∏≤‡∏ó‡∏µ‡πà‡∏™‡∏≠‡∏ô</h2>
      {classrooms.length > 0 ? (
        <ul>
          {classrooms.map((classroom) => (
            <li key={classroom.id} className="mt-2 flex items-center gap-2">
              {editMode === classroom.id ? (
                <>
                  <input
                    type="text"
                    value={updatedName}
                    onChange={(e) => setUpdatedName(e.target.value)}
                    className="border p-1"
                  />
                  <button onClick={() => handleUpdate(classroom.id)} className="btn btn-success">
                    ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å
                  </button>
                  <button onClick={() => setEditMode(null)} className="btn btn-secondary">
                    ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å
                  </button>
                </>
              ) : (
                <>
                  <button
                    className="btn btn-primary"
                    onClick={() => navigate(`/classroom/${classroom.id}`)}
                  >
                    {classroom.info?.name || "‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ä‡∏∑‡πà‡∏≠‡∏ß‡∏¥‡∏ä‡∏≤"}
                  </button>
                  <button onClick={() => setEditMode(classroom.id)} className="btn btn-warning">
                    ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
                  </button>
                  <button onClick={() => handleDelete(classroom.id)} className="btn btn-error">
                    ‡∏•‡∏ö
                  </button>
                </>
              )}
            </li>
          ))}
        </ul>
      ) : (
        <p>‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏´‡πâ‡∏≠‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô</p>
      )}
    </div>
  );
};

export default ClassroomList;
